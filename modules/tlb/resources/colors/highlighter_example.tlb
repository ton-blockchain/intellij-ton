/*
 *   FROM hashmap.tlb
 */
/// Bit type definition documentation
<CONSTRUCTOR_NAME>bit</CONSTRUCTOR_NAME><BINARY_TAG>$_</BINARY_TAG> (<BUILTIN_TYPE>##</BUILTIN_TYPE> 1) = <RESULT_TYPE_NAME>Bit</RESULT_TYPE_NAME>;

// ordinary Hashmap / HashmapE, with fixed length keys
<CONSTRUCTOR_NAME>hm_edge</CONSTRUCTOR_NAME><HEX_TAG>#_</HEX_TAG> {<TYPE_PARAMETER>n</TYPE_PARAMETER>:<BUILTIN_TYPE>#</BUILTIN_TYPE>} {<TYPE_PARAMETER>X</TYPE_PARAMETER>:<BUILTIN_TYPE>Type</BUILTIN_TYPE>} {<TYPE_PARAMETER>l</TYPE_PARAMETER>:<BUILTIN_TYPE>#</BUILTIN_TYPE>} {<TYPE_PARAMETER>m</TYPE_PARAMETER>:<BUILTIN_TYPE>#</BUILTIN_TYPE>} <FIELD_NAME>label</FIELD_NAME>:(<IDENTIFIER>HmLabel</IDENTIFIER> ~<TYPE_PARAMETER>l</TYPE_PARAMETER> <TYPE_PARAMETER>n</TYPE_PARAMETER>)
          {<TYPE_PARAMETER>n</TYPE_PARAMETER> = (~<TYPE_PARAMETER>m</TYPE_PARAMETER>) + <TYPE_PARAMETER>l</TYPE_PARAMETER>} <FIELD_NAME>node</FIELD_NAME>:(<IDENTIFIER>HashmapNode</IDENTIFIER> <TYPE_PARAMETER>m</TYPE_PARAMETER> <TYPE_PARAMETER>X</TYPE_PARAMETER>) = <RESULT_TYPE_NAME>Hashmap</RESULT_TYPE_NAME> <TYPE_PARAMETER>n</TYPE_PARAMETER> <TYPE_PARAMETER>X</TYPE_PARAMETER>;

<CONSTRUCTOR_NAME>hmn_leaf</CONSTRUCTOR_NAME><HEX_TAG>#_</HEX_TAG> {<TYPE_PARAMETER>X</TYPE_PARAMETER>:<BUILTIN_TYPE>Type</BUILTIN_TYPE>} <FIELD_NAME>value</FIELD_NAME>:<TYPE_PARAMETER>X</TYPE_PARAMETER> = <RESULT_TYPE_NAME>HashmapNode</RESULT_TYPE_NAME> 0 <TYPE_PARAMETER>X</TYPE_PARAMETER>;
<CONSTRUCTOR_NAME>hmn_fork</CONSTRUCTOR_NAME><HEX_TAG>#_</HEX_TAG> {<TYPE_PARAMETER>n</TYPE_PARAMETER>:<BUILTIN_TYPE>#</BUILTIN_TYPE>} {<TYPE_PARAMETER>X</TYPE_PARAMETER>:<BUILTIN_TYPE>Type</BUILTIN_TYPE>} <FIELD_NAME>left</FIELD_NAME>:^(<IDENTIFIER>Hashmap</IDENTIFIER> <TYPE_PARAMETER>n</TYPE_PARAMETER> <TYPE_PARAMETER>X</TYPE_PARAMETER>) 
           <FIELD_NAME>right</FIELD_NAME>:^(<IDENTIFIER>Hashmap</IDENTIFIER> <TYPE_PARAMETER>n</TYPE_PARAMETER> <TYPE_PARAMETER>X</TYPE_PARAMETER>) = <RESULT_TYPE_NAME>HashmapNode</RESULT_TYPE_NAME> (<TYPE_PARAMETER>n</TYPE_PARAMETER> + 1) <TYPE_PARAMETER>X</TYPE_PARAMETER>;

<CONSTRUCTOR_NAME>hml_short</CONSTRUCTOR_NAME><BINARY_TAG>$0</BINARY_TAG> {<TYPE_PARAMETER>m</TYPE_PARAMETER>:<BUILTIN_TYPE>#</BUILTIN_TYPE>} {<TYPE_PARAMETER>n</TYPE_PARAMETER>:<BUILTIN_TYPE>#</BUILTIN_TYPE>} <FIELD_NAME>len</FIELD_NAME>:(<IDENTIFIER>Unary</IDENTIFIER> ~<TYPE_PARAMETER>n</TYPE_PARAMETER>) {<TYPE_PARAMETER>n</TYPE_PARAMETER> <= <TYPE_PARAMETER>m</TYPE_PARAMETER>} <FIELD_NAME>s</FIELD_NAME>:(<TYPE_PARAMETER>n</TYPE_PARAMETER> * <IDENTIFIER>Bit</IDENTIFIER>) = <RESULT_TYPE_NAME>HmLabel</RESULT_TYPE_NAME> ~<TYPE_PARAMETER>n</TYPE_PARAMETER> <TYPE_PARAMETER>m</TYPE_PARAMETER>;
<CONSTRUCTOR_NAME>hml_long</CONSTRUCTOR_NAME><BINARY_TAG>$10</BINARY_TAG> {<TYPE_PARAMETER>m</TYPE_PARAMETER>:<BUILTIN_TYPE>#</BUILTIN_TYPE>} <FIELD_NAME>n</FIELD_NAME>:(<BUILTIN_TYPE>#<=</BUILTIN_TYPE> <TYPE_PARAMETER>m</TYPE_PARAMETER>) <FIELD_NAME>s</FIELD_NAME>:(<TYPE_PARAMETER>n</TYPE_PARAMETER> * <IDENTIFIER>Bit</IDENTIFIER>) = <RESULT_TYPE_NAME>HmLabel</RESULT_TYPE_NAME> ~<TYPE_PARAMETER>n</TYPE_PARAMETER> <TYPE_PARAMETER>m</TYPE_PARAMETER>;
<CONSTRUCTOR_NAME>hml_same</CONSTRUCTOR_NAME><BINARY_TAG>$11</BINARY_TAG> {<TYPE_PARAMETER>m</TYPE_PARAMETER>:<BUILTIN_TYPE>#</BUILTIN_TYPE>} <FIELD_NAME>v</FIELD_NAME>:<IDENTIFIER>Bit</IDENTIFIER> <FIELD_NAME>n</FIELD_NAME>:(<BUILTIN_TYPE>#<=</BUILTIN_TYPE> <TYPE_PARAMETER>m</TYPE_PARAMETER>) = <RESULT_TYPE_NAME>HmLabel</RESULT_TYPE_NAME> ~<TYPE_PARAMETER>n</TYPE_PARAMETER> <TYPE_PARAMETER>m</TYPE_PARAMETER>;

<CONSTRUCTOR_NAME>unary_zero</CONSTRUCTOR_NAME><BINARY_TAG>$0</BINARY_TAG> = <RESULT_TYPE_NAME>Unary</RESULT_TYPE_NAME> ~0;
<CONSTRUCTOR_NAME>unary_succ</CONSTRUCTOR_NAME><BINARY_TAG>$1</BINARY_TAG> {<TYPE_PARAMETER>n</TYPE_PARAMETER>:<BUILTIN_TYPE>#</BUILTIN_TYPE>} <FIELD_NAME>x</FIELD_NAME>:(<IDENTIFIER>Unary</IDENTIFIER> ~<TYPE_PARAMETER>n</TYPE_PARAMETER>) = <RESULT_TYPE_NAME>Unary</RESULT_TYPE_NAME> ~(<TYPE_PARAMETER>n</TYPE_PARAMETER> + 1);

<CONSTRUCTOR_NAME>hme_empty</CONSTRUCTOR_NAME><BINARY_TAG>$0</BINARY_TAG> {<TYPE_PARAMETER>n</TYPE_PARAMETER>:<BUILTIN_TYPE>#</BUILTIN_TYPE>} {<TYPE_PARAMETER>X</TYPE_PARAMETER>:<BUILTIN_TYPE>Type</BUILTIN_TYPE>} = <RESULT_TYPE_NAME>HashmapE</RESULT_TYPE_NAME> <TYPE_PARAMETER>n</TYPE_PARAMETER> <TYPE_PARAMETER>X</TYPE_PARAMETER>;
<CONSTRUCTOR_NAME>hme_root</CONSTRUCTOR_NAME><BINARY_TAG>$1</BINARY_TAG> {<TYPE_PARAMETER>n</TYPE_PARAMETER>:<BUILTIN_TYPE>#</BUILTIN_TYPE>} {<TYPE_PARAMETER>X</TYPE_PARAMETER>:<BUILTIN_TYPE>Type</BUILTIN_TYPE>} <FIELD_NAME>root</FIELD_NAME>:^(<IDENTIFIER>Hashmap</IDENTIFIER> <TYPE_PARAMETER>n</TYPE_PARAMETER> <TYPE_PARAMETER>X</TYPE_PARAMETER>) = <RESULT_TYPE_NAME>HashmapE</RESULT_TYPE_NAME> <TYPE_PARAMETER>n</TYPE_PARAMETER> <TYPE_PARAMETER>X</TYPE_PARAMETER>;
