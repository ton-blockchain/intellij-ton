<idea-plugin package="org.ton.intellij.tolk" xmlns:xi="http://www.w3.org/2001/XInclude">
    <xi:include href="/META-INF/inspections.xml" xpointer="xpointer(/idea-plugin/*)"/>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Tolk language-->
        <fileType name="Tolk"
                  implementationClass="org.ton.intellij.tolk.TolkFileType"
                  fieldName="INSTANCE"
                  language="Tolk"
                  extensions="tolk"
        />

        <!-- region Language general -->
        <lang.parserDefinition language="Tolk" implementationClass="org.ton.intellij.tolk.parser.TolkParserDefinition"/>
        <lang.commenter language="Tolk" implementationClass="org.ton.intellij.tolk.ide.TolkCommenter"/>
        <lang.braceMatcher language="Tolk" implementationClass="org.ton.intellij.tolk.ide.TolkPairedBraceMatcher"/>
        <lang.quoteHandler language="Tolk" implementationClass="org.ton.intellij.tolk.ide.TolkQuoteHandler"/>
        <lang.foldingBuilder language="Tolk" implementationClass="org.ton.intellij.tolk.ide.TolkFoldingBuilder"/>
        <lang.psiStructureViewFactory language="Tolk"
                                      implementationClass="org.ton.intellij.tolk.ide.structure.TolkPsiStructureViewFactory"/>
        <lang.findUsagesProvider language="Tolk"
                                 implementationClass="org.ton.intellij.tolk.ide.TolkFindUsagesProvider"/>
        <lang.implementationTextSelectioner language="Tolk"
                                            implementationClass="org.ton.intellij.tolk.ide.TolkImplementationTextSelectioner"/>
        <enterHandlerDelegate implementation="org.ton.intellij.tolk.ide.typing.TolkEnterInLineCommentHandler"
                              id="TolkEnterInLineCommentHandler"/>
        <!-- endregion Language general -->

        <!-- region Annotator & Highlighting -->
        <lang.syntaxHighlighterFactory language="Tolk"
                                       implementationClass="org.ton.intellij.tolk.highlighting.TolkSyntaxHighlighterFactory"/>
        <annotator language="Tolk" implementationClass="org.ton.intellij.tolk.highlighting.TolkDumbAnnotator"/>
        <annotator language="Tolk" implementationClass="org.ton.intellij.tolk.highlighting.TolkAnnotator"/>
        <annotator language="Tolk" implementationClass="org.ton.intellij.tolk.highlighting.TolkDocAnnotator"/>
        <annotator language="Tolk" implementationClass="org.ton.intellij.tolk.highlighting.TolkCheckAnnotator"/>

        <colorSettingsPage implementation="org.ton.intellij.tolk.ide.colors.TolkColorSettingsPage"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/TolkDefault.xml"/>
        <additionalTextAttributes scheme="Dark" file="colorSchemes/TolkDark.xml"/>
        <!-- endregion Annotator & Highlighting -->

        <!-- region Formatter -->
        <lang.formatter language="Tolk" implementationClass="org.ton.intellij.tolk.ide.formatter.TolkFormatter"/>
        <langCodeStyleSettingsProvider
                implementation="org.ton.intellij.tolk.ide.formatter.TolkLanguageCodeStyleSettingsProvider"/>
        <!-- endregion Formatter -->

        <!-- region Navigation -->
        <gotoClassContributor implementation="org.ton.intellij.tolk.ide.navigation.TolkGotoClassLikeContributor"/>
        <gotoSymbolContributor implementation="org.ton.intellij.tolk.ide.navigation.TolkGotoSymbolContributor"/>

        <breadcrumbsInfoProvider implementation="org.ton.intellij.tolk.ide.structure.TolkBreadcrumbsProvider"/>
        <navbar implementation="org.ton.intellij.tolk.ide.structure.TolkNavBarModelExtension" order="first"/>
        <!-- endregion Navigation -->

        <!-- region Imports -->
        <lang.importOptimizer language="Tolk"
                              implementationClass="org.ton.intellij.tolk.codeInsight.imports.TolkImportOptimizer"/>
        <!-- endregion Imports -->

        <!-- region CodeVision & Hints -->
        <!-- Hints -->
        <codeInsight.declarativeInlayProvider
                language="Tolk"
                implementationClass="org.ton.intellij.tolk.codeInsight.hint.TolkTypeHintsProvider"
                group="TYPES_GROUP"
                isEnabledByDefault="true"
                bundle="messages.TolkBundle"
                nameKey="codeInsight.hint.types"
                providerId="tolk.types.hints"
        >
            <option optionId="hint.type.var"
                    enabledByDefault="true"
                    bundle="messages.TolkBundle"
                    nameKey="codeInsight.hint.name.types.var"
                    descriptionKey="codeInsight.hint.description.types.var"/>
            <option optionId="hint.type.const"
                    enabledByDefault="true"
                    bundle="messages.TolkBundle"
                    nameKey="codeInsight.hint.name.types.const"
                    descriptionKey="codeInsight.hint.description.types.const"/>
            <option optionId="hint.type.fun"
                    enabledByDefault="true"
                    bundle="messages.TolkBundle"
                    nameKey="codeInsight.hint.name.types.fun"
                    descriptionKey="codeInsight.hint.description.types.fun"/>

        </codeInsight.declarativeInlayProvider>

        <codeInsight.declarativeInlayProvider language="Tolk"
                                              bundle="messages.TolkBundle"
                                              nameKey="codeInsight.hint.other.method.id"
                                              group="OTHER_GROUP"
                                              implementationClass="org.ton.intellij.tolk.codeInsight.hint.TolkMethodIdHintsProvider"
                                              isEnabledByDefault="true"
                                              descriptionKey="codeInsight.hint.description.values.method.id"
                                              providerId="tolk.other.hints.method.ids"/>

        <codeInsight.declarativeInlayProvider language="Tolk"
                                              bundle="messages.TolkBundle"
                                              nameKey="codeInsight.hint.values.exit.code"
                                              group="VALUES_GROUP"
                                              implementationClass="org.ton.intellij.tolk.codeInsight.hint.TolkExitCodeHintsProvider"
                                              isEnabledByDefault="true"
                                              descriptionKey="codeInsight.hint.description.values.exit.code"
                                              providerId="tolk.values.hints.exit.code"/>

        <codeInsight.declarativeInlayProvider group="PARAMETERS_GROUP"
                                              implementationClass="org.ton.intellij.tolk.codeInsight.hint.TolkParameterHintsProvider"
                                              isEnabledByDefault="true"
                                              language="Tolk"
                                              providerId="tolk.parameters.hints"
                                              bundle="messages.TolkBundle"
                                              nameKey="codeInsight.hint.parameters"
                                              descriptionKey="codeInsight.hint.description.parameters"/>
        <codeInsight.parameterInfo language="Tolk"
                                   implementationClass="org.ton.intellij.tolk.codeInsight.hint.TolkParameterInfoHandler"/>
        <!-- Code vision -->
        <!--suppress PluginXmlValidity -->
        <vcs.codeVisionLanguageContext language="Tolk"
                                       implementationClass="org.ton.intellij.tolk.codeInsight.hint.codeVision.TolkVcsCodeVisionContext"/>
        <codeInsight.daemonBoundCodeVisionProvider
                implementation="org.ton.intellij.tolk.codeInsight.hint.codeVision.TolkReferencesCodeVisionProvider"/>
        <!-- endregion CodeVision & Hints -->

        <!-- region Indexes -->
        <stubIndex implementation="org.ton.intellij.tolk.stub.index.TolkNamedElementIndex"/>
        <stubIndex implementation="org.ton.intellij.tolk.stub.index.TolkTypeDefIndex"/>
        <stubIndex implementation="org.ton.intellij.tolk.stub.index.TolkStructIndex"/>
        <stubIndex implementation="org.ton.intellij.tolk.stub.index.TolkTypeSymbolIndex"/>
        <stubIndex implementation="org.ton.intellij.tolk.stub.index.TolkFunctionIndex"/>
        <stubElementTypeHolder class="org.ton.intellij.tolk.psi.TolkElementTypes" externalIdPrefix="tolk."/>
        <!-- endregion Indexes -->

        <!-- region Injection -->
        <multiHostInjector implementation="org.ton.intellij.tolk.ide.TolkLanguageInjector"/>
        <languageInjector implementation="org.ton.intellij.tolk.ide.TolkStringAsmInjector"/>
        <!-- endregion Injection -->

        <!-- region Searches -->
        <!--  endregion Searches -->

        <!-- region Code Insight -->
        <codeInsight.lineMarkerProvider language="Tolk"
                                        implementationClass="org.ton.intellij.tolk.ide.linemarker.TolkRecursiveCallLineMarkerProvider"/>
        <codeInsight.typeInfo language="Tolk"
                              implementationClass="org.ton.intellij.tolk.codeInsight.hint.TolkTypeProvider"/>
        <!-- endregion Code Insight -->

        <!-- region Documentation -->
        <lang.documentationProvider language="Tolk"
                                    implementationClass="org.ton.intellij.tolk.doc.TolkDocumentationProvider"/>
        <!-- endregion Documentation -->

        <!-- region Completion -->
        <lookup.charFilter implementation="org.ton.intellij.tolk.ide.completion.TolkCharFilter"/>
        <typedHandler implementation="org.ton.intellij.tolk.codeInsight.editorActions.TolkTypedHandler"/>

        <liveTemplateContext
                contextId="tolk"
                implementation="org.ton.intellij.tolk.template.TolkEverywhereContextType"/>

        <completion.contributor language="Tolk"
                                implementationClass="org.ton.intellij.tolk.ide.completion.TolkCompletionContributor"/>
        <completion.confidence language="Tolk" order="last"
                               implementationClass="org.ton.intellij.tolk.ide.completion.TolkCompletionConfidence"/>
        <!-- endregion Completion -->

        <!-- region Postfix Templates -->
        <codeInsight.template.postfixTemplateProvider
                language="Tolk"
                implementationClass="org.ton.intellij.tolk.ide.completion.postfix.TolkPostfixTemplateProvider"/>
        <!-- endregion Postfix Templates -->

        <!-- region Editor -->
        <editorNotificationProvider
                implementation="org.ton.intellij.tolk.ide.configurable.TolkSetupToolchainNotificationProvider"/>

        <postStartupActivity implementation="org.ton.intellij.tolk.ide.TolkAttachTestConsoleFiltersAtStartup"/>
        <postStartupActivity implementation="org.ton.intellij.tolk.psi.impl.TolkBuiltins$RegisterActivity"/>
        <postStartupActivity implementation="org.ton.intellij.tolk.toolchain.TolkToolchainDetectActivity"/>
        <!-- endregion Editor -->

        <!-- region Refactorings -->
        <lang.refactoringSupport language="Tolk"
                                 implementationClass="org.ton.intellij.tolk.refactor.TolkRefactoringSupportProvider"/>

        <renamePsiElementProcessor id="VlangRenameProcessor"
                                   implementation="org.ton.intellij.tolk.refactor.rename.TolkRenameProcessor"/>
        <vetoRenameCondition implementation="org.ton.intellij.tolk.refactor.rename.TolkRenameVeto"/>

        <lang.namesValidator language="Tolk"
                             implementationClass="org.ton.intellij.tolk.refactor.TolkNamesValidator"/>

        <lang.elementManipulator forClass="org.ton.intellij.tolk.psi.TolkIncludeDefinition"
                                 implementationClass="org.ton.intellij.tolk.psi.impl.TolkIncludePathElementManipulator"/>

        <lang.elementManipulator forClass="org.ton.intellij.tolk.psi.TolkSelfExpression"
                                 implementationClass="org.ton.intellij.tolk.psi.impl.TolkSelfExpressionElementManipulator"/>

        <lang.elementManipulator forClass="org.ton.intellij.tolk.psi.TolkStringLiteral"
                                 implementationClass="org.ton.intellij.tolk.psi.reference.manipulators.TolkStringLiteralManipulator"/>
        <!-- endregion Refactorings -->

        <consoleFilterProvider implementation="org.ton.intellij.tolk.ide.TolkConsoleFilterProvider"/>
        <readWriteAccessDetector implementation="org.ton.intellij.tolk.ide.usages.TolkReadWriteAccessDetector"/>

        <projectConfigurable instance="org.ton.intellij.tolk.ide.configurable.TolkProjectConfigurable"
                             groupId="language"
                             id="language.tolk"
                             bundle="messages.TolkBundle" key="tolk.name"/>

        <additionalLibraryRootsProvider
                implementation="org.ton.intellij.tolk.toolchain.TolkSdkSyntheticLibraryProvider"/>
    </extensions>

    <extensions defaultExtensionNs="org.ton">
        <tolk.toolchainFlavor id="tolk.nodeModulesFlavor"
                              implementation="org.ton.intellij.tolk.toolchain.flavor.TolkNodeModulesToolchainFlavor"
                              order="first"/>
        <tolk.toolchainFlavor id="tolk.compilerRepositoryFlavor"
                              implementation="org.ton.intellij.tolk.toolchain.flavor.TolkCompilerRepositoryToolchainFlavor"/>
    </extensions>

    <extensionPoints>
        <extensionPoint qualifiedName="org.ton.tolk.toolchainFlavor"
                        interface="org.ton.intellij.tolk.toolchain.flavor.TolkToolchainFlavor"
                        dynamic="true"/>
    </extensionPoints>

    <applicationListeners>
        <listener class="org.ton.intellij.tolk.psi.impl.TolkBuiltins$UnregisterListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>

    <actions>
        <!--suppress PluginXmlI18n -->
        <action id="NewTolkFile" class="org.ton.intellij.tolk.action.file.TolkCreateFileAction"
                text="Tolk File" description="Create new Tolk file">
            <add-to-group group-id="NewGroup"/>
        </action>
    </actions>
</idea-plugin>
