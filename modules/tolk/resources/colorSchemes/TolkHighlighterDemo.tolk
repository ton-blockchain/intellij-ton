// This is a line comment
/// This is a doc comment
const <CONSTANT>CONST_VALUE</CONSTANT> = <FUNCTION_CALL>stringCrc32</FUNCTION_CALL>("some_str")
global <GLOBAL_VARIABLE>GLOBAL_VAR</GLOBAL_VARIABLE>: <PRIMITIVE>int</PRIMITIVE> /* no default value */

type <TYPE_ALIAS>MInt</TYPE_ALIAS> = <PRIMITIVE>int</PRIMITIVE>
struct <EMPTY_STRUCT>Empty</EMPTY_STRUCT> {}

struct <STRUCT>Wrapper</STRUCT><<TYPE_PARAMETER>T</TYPE_PARAMETER>> { <FIELD>item</FIELD>: <TYPE_PARAMETER>T</TYPE_PARAMETER> }

struct <STRUCT>Point</STRUCT> {
    <FIELD>x</FIELD>: <PRIMITIVE>int</PRIMITIVE>
    <FIELD>y</FIELD>: <TYPE_ALIAS>MInt</TYPE_ALIAS>
}

fun <STRUCT>Point</STRUCT>.<STATIC_FUNCTION>generatePoint</STATIC_FUNCTION>(<PARAMETER>x</PARAMETER>: <PRIMITIVE>int</PRIMITIVE>, <PARAMETER>y</PARAMETER>: <PRIMITIVE>int</PRIMITIVE>): <STRUCT>Point</STRUCT> {
    return { <FIELD>x</FIELD>, <FIELD>y</FIELD> };
}

fun <STRUCT>Point</STRUCT>.<METHOD>assignCoords</METHOD>(mutate <SELF_PARAMETER>self</SELF_PARAMETER>) {
    self.<FIELD>x</FIELD> = 10;
    self.<FIELD>y</FIELD> = <FUNCTION_CALL>returnConstValue</FUNCTION_CALL>();
}

fun <FUNCTION>returnConstValue</FUNCTION>(): <PRIMITIVE>int</PRIMITIVE> {
    return <CONSTANT>CONST_VALUE</CONSTANT>;
}

fun <STRUCT>Wrapper</STRUCT><<TYPE_PARAMETER>T</TYPE_PARAMETER>>.<STATIC_FUNCTION>create</STATIC_FUNCTION>(<PARAMETER>initial</PARAMETER>: <TYPE_PARAMETER>T</TYPE_PARAMETER>): <STRUCT>Wrapper</STRUCT><<TYPE_PARAMETER>T</TYPE_PARAMETER>> { return { <FIELD>item</FIELD>: <PARAMETER>initial</PARAMETER> }; }

@<ANNOTATION>method_id</ANNOTATION>(112)
fun <FUNCTION>testPoint</FUNCTION>(<PARAMETER>notNull</PARAMETER>: <PRIMITIVE>bool</PRIMITIVE>): <STRUCT>Point</STRUCT>? {
    if (<PARAMETER>notNull</PARAMETER>) {
        <GLOBAL_VARIABLE>GLOBAL_VAR</GLOBAL_VARIABLE> = 42;
        var <VARIABLE>p</VARIABLE> = <STRUCT>Point</STRUCT>.<STATIC_FUNCTION_CALL>generatePoint</STATIC_FUNCTION_CALL>(<GLOBAL_VARIABLE>GLOBAL_VAR</GLOBAL_VARIABLE>, 0);
        <VARIABLE>p</VARIABLE>.<METHOD_CALL>assignCoords</METHOD_CALL>();
        return <VARIABLE>p</VARIABLE>;
    }
    return null;
}
